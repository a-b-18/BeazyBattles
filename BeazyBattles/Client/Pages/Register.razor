@page "/register"
@inject IUnitService UnitService
@inject NavigationManager NavigationManager
@inject IAuthService AuthService
@inject IToastService ToastService

<h3>Register</h3>
<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group">
        <label for="email" class="required">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
        <ValidationMessage For="@(() => user.Email)" />
    </div>
    <div class="form-group">
        <label for="username" class="required">Username</label>
        <InputText id="username" @bind-Value="user.Username" class="form-control"></InputText>
        <ValidationMessage For="@(() => user.Username)" />
    </div>
    <div class="form-group">
        <label for="password" class="required">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(() => user.Password)" />
    </div>
    <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(() => user.ConfirmPassword)" />
    </div>
    <div class="form-group">
        <label for="bio">Bio</label>
        <InputText id="bio" @bind-Value="user.Bio" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="startUnit">Start Unit</label><br />
        <InputRadioGroup id="startUnit" @bind-Value="user.StartUnitId" class="form-control">
            @foreach (var unit in UnitService.Units)
            {
                @if (unit.Id <= 3)
                {
                <InputRadio Value="@unit.Id" /><span style="padding-left: 5px; padding-right: 5px">@unit.Title</span><img src=@unit.IconPath /><br />
                }
            }
        </InputRadioGroup>
    </div>
    <div class="form-group">
        <label for="dateOfBirth">Date of Birth</label>
        <InputDate id="dateOfBirth" @bind-Value="user.DateOfBirth" class="form-control"></InputDate>
    </div>
    <div class="form-check">
        <InputCheckbox id="confirmed" @bind-Value="user.IsConfirmed" class="form-check-input" type=></InputCheckbox>
        <label for="confirmed" class="form-check-label">Agree</label>
        <ValidationMessage For="@(() => user.IsConfirmed)" />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>


@code {
    UserRegister user = new UserRegister();

    bool apiLoaded = false;
    protected override async Task OnInitializedAsync()
    {
        await UnitService.LoadUnitsAsync();
        apiLoaded = true;
    }

    async void HandleRegistration()
    {
        var result = await AuthService.Register(user);
        if (result.Success)
        {
            ToastService.ShowSuccess(result.Message);
            NavigationManager.NavigateTo("/");
        }
        else
        {
            ToastService.ShowError(result.Message);
        }
    }

}
